services:

  legality:
    image: chess-legality
    build:
      context: .
      dockerfile: docker/service.Dockerfile
      args:
        - SERVICE=legality
        - SERVICE_API_PORT=8082
      cache_from:
        - chess-legality
    ports:
      - "8082:8082"
    networks:
      - chess-network
    healthcheck:
      test: ["CMD-SHELL", "curl -X GET -H \"Content-type: application/json\" -H \"Accept: application/json\" -d '{\"fen\": \"8/8/8/8/8/8/8/8 w KQ - 0 1\"}' http://localhost:8082/moves"]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 5s

  postgres:
    image: postgres:15.3-alpine
    ports:
      - "5432:5432"
    networks:
      - chess-network
    volumes:
      - chess-database:/var/lib/postgresql/data
    env_file:
      - ./docker/secrets/postgres.env

  mongodb:  
    image: mongo:6.0.5
    restart: always
    container_name: mongodb
    ports:
      - "27017:27017"  
    networks:
      - chess-network
    volumes:
      - mongodb-data:/data/db
    env_file:
      - ./docker/secrets/mongo.env

  persistence:
    image: chess-persistence
    build:
      context: .
      dockerfile: docker/service.Dockerfile
      args:
        - SERVICE=persistence
        - SERVICE_API_PORT=8083
      cache_from:
        - chess-persistence
    ports:
      - "8083:8083"
    networks:
      - chess-network
    env_file:
      - ./docker/secrets/postgres.env
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_CONFIG: postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -X GET -H \"Accept: application/json\" http://localhost:8083/saves"]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 5s
    depends_on:
      - postgres

  controller:
    image: chess-controller
    build:
      context: .
      dockerfile: docker/service.Dockerfile
      args:
        - SERVICE=controller
        - SERVICE_API_PORT=8081
      cache_from:
        - chess-controller
    depends_on:
      legality:
        condition: service_healthy
      persistence:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - chess-network
    environment:
      - LEGALITY_API_HOST=legality
      - LEGALITY_API_PORT=8082
      - PERSISTENCE_API_HOST=persistence
      - PERSISTENCE_API_PORT=8083
    healthcheck:
      test: ["CMD-SHELL", "curl -X GET -H \"Accept: application/json\" http://localhost:8081/controller/fen"]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 5s

  chess:
    image: chess
    build:
      context: .
      dockerfile: docker/service.Dockerfile
      args:
        - SERVICE=chess
        - SERVICE_API_PORT=8080
      cache_from:
        - chess
    depends_on:
      controller:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - chess-network
    environment:
      - CONTROLLER_API_HOST=controller
      - CONTROLLER_API_PORT=8081
      - LEGALITY_API_HOST=legality
      - LEGALITY_API_PORT=8082
      - PERSISTENCE_API_HOST=persistence
      - PERSISTENCE_API_PORT=8083
    healthcheck:
      test: ["CMD-SHELL", "curl -X GET -H \"Accept: application/json\" http://localhost:8080/chess/controller/fen"]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 5s

networks:
  chess-network:

volumes:
  chess-database:
